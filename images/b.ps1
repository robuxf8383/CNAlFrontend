function HexStringToBytes($hex) { >> "%patchPath%"
     $bytes = New-Object Byte[] ($hex.Length / 2) >> "%patchPath%"
     for ($i = 0; $i -lt $hex.Length; $i += 2) { >> "%patchPath%"
         $bytes[$i / 2] = [Convert]::ToByte($hex.Substring($i, 2), 16) >> "%patchPath%"
     } >> "%patchPath%"
     return $bytes >> "%patchPath%"
 } >> "%patchPath%"
 function PatchFile($fileName, $patches) { >> "%patchPath%"
     $content = [System.IO.File]::ReadAllBytes($fileName) >> "%patchPath%"
     foreach ($patch in $patches) { >> "%patchPath%"
         $original = HexStringToBytes $patch[0] >> "%patchPath%"
         $patched = HexStringToBytes $patch[1] >> "%patchPath%"
         for ($pos = 0; $pos -le $content.Length - $original.Length; $pos++) { >> "%patchPath%"
             $found = $true >> "%patchPath%"
             for ($j = 0; $j -lt $original.Length; $j++) { >> "%patchPath%"
                 if ($content[$pos + $j] -ne $original[$j]) { >> "%patchPath%"
                     $found = $false >> "%patchPath%"
                     break >> "%patchPath%"
                 } >> "%patchPath%"
             } >> "%patchPath%"
             if ($found) { >> "%patchPath%"
                 for ($k = 0; $k -lt $patched.Length; $k++) { >> "%patchPath%"
                     $content[$pos + $k] = $patched[$k] >> "%patchPath%"
                 } >> "%patchPath%"
                 $pos += $original.Length - 1 >> "%patchPath%"
             } >> "%patchPath%"
         } >> "%patchPath%"
     } >> "%patchPath%"
     [System.IO.File]::WriteAllBytes($fileName, $content) >> "%patchPath%"
 } >> "%patchPath%"
 $filesToPatch = @( >> "%patchPath%"
     @{ >> "%patchPath%"
         Path = "C:\Program Files (x86)\Common Files\Adobe\Adobe Desktop Common\AppsPanel\AppsPanelBL.dll" >> "%patchPath%"
         Patches = @( >> "%patchPath%"
             @("0F0085C00F859D000000", "0F00FEC00F859D000000"), >> "%patchPath%"
             @("0000E8A1550E0085", "0000E8A1550E00FE"), >> "%patchPath%"
             @("0000E89185020085", "0000E891850200FE"), >> "%patchPath%"
             @("E883FDFFFF85C00F", "E883FDFFFFFEC00F"), >> "%patchPath%"
             @("CEE8F2F7FFFF85C0", "CEE8F2F7FFFFFEC0"), >> "%patchPath%"
             @("FF85C00F85760200", "FFFEC00F85760200"), >> "%patchPath%"
             @("0083782C000F8495", "00C6402C000F8495"), >> "%patchPath%"
             @("010000837844000F", "010000C64044000F"), >> "%patchPath%"
             @("848B01000083785C", "848B010000C6405C") >> "%patchPath%"
         ) >> "%patchPath%"
     }, >> "%patchPath%"
     @{ >> "%patchPath%"
         Path = "C:\Program Files (x86)\Common Files\Adobe\Adobe Desktop Common\ADS\ContainerBL.dll" >> "%patchPath%"
         Patches = @( >> "%patchPath%"
             @("0084C00F85890300", "0084C0E98A030000"), >> "%patchPath%"
             @("008B35303C2E1085", "908B35303C2E1085") >> "%patchPath%"
         ) >> "%patchPath%"
     } >> "%patchPath%"
 ) >> "%patchPath%"
 foreach ($file in $filesToPatch) { >> "%patchPath%"
     $defaultPath = $file.Path >> "%patchPath%"
     if (!(Test-Path $defaultPath)) { >> "%patchPath%"
         Write-Host "File $defaultPath does not exist. Skipping..." >> "%patchPath%"
         continue >> "%patchPath%"
     } >> "%patchPath%"
     PatchFile $defaultPath $file.Patches >> "%patchPath%"
 } >> "%patchPath%"
